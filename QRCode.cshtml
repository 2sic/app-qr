@inherits Custom.Hybrid.RazorPro
@using ToSic.Razor.Blade;
@{

  var qrInfo = MyItem;

  // The view identifier determines if the code should be visible or only on printing
  var printOnly = MyView.Identifier == "print";

  // sets qrlink to specified url  
  var qrLink = qrInfo.Bool("LinkCurrentPage") ? Link.To(parameters: MyPage.Parameters) : qrInfo.Url("Link");

  // This ID is used to identify our unique code in the HTML DOM
  var qrDomId = "qr-code-js" + MyContext.Module.Id;
}

@* Add Infos for URL and Title to generate a  QR Code *@
<div @Kit.Edit.TagToolbar(qrInfo) class='@(printOnly ? "app-qrcode2-print-only" : "")'>
  <a class="@qrDomId" href='@qrLink' target="_blank"></a>
  @if (qrInfo.Bool("DisplayLinkOrTitle")) {
    var displayText = Text.First(qrInfo.String("Title"), qrInfo.String("Link"));
    <div>@displayText</div>
  }
</div>

@* Show a special message to admins if the QR-Code is invisible otherwise *@
@if (printOnly && MyUser.IsContentAdmin) {
  <div class="alert alert-info app-qrcode2-noprint" @Kit.Edit.TagToolbar(qrInfo)>
    @App.Resources.String("PrintQrAdminHint")
  </div>
}

@* Include assets *@
@{



  // Generate the QR Code 
  var qrParams = qrInfo.Child("QrCodeSettings") ?? App.Settings.Child("QrCodeSettings");
  var size = qrParams.Int("Size");
  var data = new {
      domId = qrDomId,
      options = new {
        color = "#" + qrParams.String("Color").Trim('#'),
        width = size,
        height = size
      }
  };
}

<script>
  window.debugTurnOn = true;
</script>
@* When the page is ready, run appQr2 to init JS *@
@Kit.Page.TurnOn("window.appQr2.init()", data: data)
<script type="text/javascript" src="@App.Path/dist/scripts.min.js" @Kit.Page.AssetAttributes(position: "bottom")></script>
<link rel="stylesheet" href="@App.Path/dist/styles.min.css">